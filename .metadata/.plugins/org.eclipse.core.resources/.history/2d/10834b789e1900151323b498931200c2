
public class Planet
{
    public static void main(String[] args)
    {
        Draw();
    }
    public Planet(double x,double y,double xv,double yv,double mass,String image)
    {
        this.x = x;
        this.y = y;
        this.xVelocity = xv;
        this.yVelocity = yv;
        this.mass = mass;
        this.img = image;
    }
    public double calcDistance(Planet rhs)
    {
        double dx = rhs.x - x;
        double dy = rhs.y - y;
        return Math.sqrt(dx*dx+dy*dy);
    }
    public double calcPairwiseForce(Planet rhs)
    {
        return G * mass * rhs.mass /(calcDistance(rhs)*calcDistance(rhs));
    }
    public double xCos(Planet rhs)
    {
        double dx = rhs.x - x;
        return dx/calcDistance(rhs);
    }
    public double yCos(Planet rhs)
    {
        double dy = rhs.y - y;
        return dy/calcDistance(rhs);
    }
    public double calcPairwiseForceX(Planet rhs)
    {
        return calcPairwiseForce(rhs)*xCos(rhs);
    }
    public double calcPairwiseForceY(Planet rhs)
    {
        return calcPairwiseForce(rhs)*yCos(rhs);
    }
    public void setNetForce(Planet[] planets)
    {
        double totalX = 0.0;
        double totalY = 0.0;
        for(Planet planet : planets)
        {
            if(planet != this)
            {
                totalX += calcPairwiseForce(planet)*xCos(planet);
                totalY += calcPairwiseForce(planet)*yCos(planet);
            }
        }
        xNetForce = totalX;
        yNetForce = totalY;
    }
    static void Draw()
    {
        StdDraw.point(0,0);
        StdDraw.line(1, 1, 2, 2);
    }
    public double x;
    public double y;
    public double xVelocity;
    public double yVelocity;
    public double mass;
    public double xNetForce;
    public double yNetForce;
    public String img;
    public final double G = 6.67E-11;
}
