import java.io.Serializable;
import java.util.HashMap;
import java.util.HashSet;
import java.io.File;
import java.io.InputStreamReader;
import java.nio.file.Files;
import java.io.IOException;
import java.util.Arrays;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Stack;
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;
public class Gitlet implements Serializable {
    private HashSet<String> stagedFiles;
    private HashSet<String> rmFiles;
    public Gitlet()
    {
 
    }
    private void commit(String msg,boolean isFirst)
    {
        if(!isFirst && stagedFiles.isEmpty() && rmFiles.isEmpty())
        {
            System.out.println("No changes added to the commit.");
            return;
        }
        if(msg.equals("")){
            System.out.println("Please enter a commit message.");
            return;
        }
     
    }
    private void initialize()
    {
        File dir = new File(".gitlet");
        if(!dir.exists())
        {
            dir.mkdir();
            this.commit("initial commit",true);
            
        }else
        {
            System.out.println("A gitlet version control system already exists in the "
                    + "current direcotry.");
        }
    }
}
